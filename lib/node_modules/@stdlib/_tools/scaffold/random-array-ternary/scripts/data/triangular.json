{
  "alias": "triangular",
  "pkg": "stdlib/random/array/triangular",
  "base_pkg": "stdlib/random/base/triangular",

  "param_1": "a",
  "param_1_value": "2.0",
  "param_1_desc": "minimum support",
  "param_1_dtype": "number",
  "param_1_jsdoc_dtype": "number",
  "param_1_throws_desc": "must be a number",

  "param_2": "b",
  "param_2_value": "5.0",
  "param_2_desc": "maximum support",
  "param_2_dtype": "number",
  "param_2_jsdoc_dtype": "number",
  "param_2_throws_desc": "must be a number",

  "param_3": "c",
  "param_3_value": "3.0",
  "param_3_desc": "mode",
  "param_3_dtype": "number",
  "param_3_jsdoc_dtype": "number",
  "param_3_throws_desc": "must be a number",

  "output_ts_dtype": "RealFloatingPointAndGenericDataType",
  "output_ts_typed_array": "FloatTypedArray",
  "output_dtype_kind": "real_floating_point_and_generic",

  "default_dtype": "float64",
  "default_dtype_kind": "real_floating_point",
  "default_typed_array": "Float64Array",

  "from_desc": "a triangular distribution",
  "readme_from_desc": "a [triangular][@stdlib/random/base/triangular] distribution",

  "readme_heading": "Triangular Random Numbers",
  "readme_dtype_kind_desc": "real-valued floating-point data type",
  "readme_dtype_kind_pkg": "stdlib/array/typed-real-float-dtypes",

  "repl_text_main_desc": "Returns an array containing pseudorandom numbers drawn from a triangular distribution.",
  "repl_text_assign_desc": "Fills an array with pseudorandom numbers drawn from a triangular distribution.",
  "repl_text_factory_desc": "Returns a function for creating arrays containing pseudorandom numbers drawn from a triangular distribution.",

  "repl_text_param_1_desc": "Minimum support.",
  "repl_text_param_2_desc": "Maximum support.",
  "repl_text_param_3_desc": "Mode.",

  "repl_text_output_typed_arrays": "Float64Array|Float32Array",

  "keywords": "triangular,continuous"
}
