/**
* @license Apache-2.0
*
* Copyright (c) 2024 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var shell = require( 'child_process' ).execSync; // eslint-disable-line node/no-sync
var semver = require( 'semver' );
var logger = require( 'debug' );
var omit = require( '@stdlib/utils/omit' );
var rootDir = require( '@stdlib/_tools/utils/root-dir' );


// VARIABLES //

var debug = logger( 'changelog:generate' );
var OMITTED_KEYS = [ 'created', 'modified', 'unpublished' ];


// MAIN //

/**
* Returns a two-element array of published package versions and their release dates.
*
* @private
* @param {string} pkg - package name
* @returns {Array} two-element array of published package versions and their release dates
*
* @example
* var releases = npmReleases( '@stdlib/utils-omit' );
* // returns [...]
*/
function npmReleases( pkg ) {
	var releases;
	var command;
	var version;
	var opts;
	var map;

	command = 'npm view ' + pkg + ' time --json';
	opts = {
		'cwd': rootDir(),
		'stdio': [ 'pipe', 'pipe', 'ignore' ] // stdin, stdout, stderr
	};
	try {
		map = shell( command, opts ).toString();
		map = JSON.parse( map );
	} catch ( err ) {
		debug( 'Encountered an error when attempting to retrieve package release dates: %s', err.message );
		return {};
	}
	map = omit( map, OMITTED_KEYS );
	releases = [];
	for ( version in map ) {
		if ( semver.valid( version ) && !semver.prerelease( version ) ) {
			releases.push( [ version, map[ version ] ] );
		}
	}
	return releases;
}


// EXPORTS //

module.exports = npmReleases;
